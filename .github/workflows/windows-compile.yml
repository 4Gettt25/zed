name: Compile Zed for Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      # 1) Cache the registry index + downloaded crates
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      # 2) Cache the build artifacts in target/ for faster rebuilds
      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      # Install sccache to speed up incremental Rust compilations
      - name: Install sccache
        run: cargo install sccache
        shell: pwsh

      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=$(where sccache.exe)" >> $GITHUB_ENV
          echo "SCCACHE_CACHE_SIZE=10G"      >> $GITHUB_ENV

      # Install DirectX End-User Runtime so that gpui can load d3d12.dll, dxgi.dll, etc.
      - name: Install DirectX runtime
        run: choco install directx-runtime -y
        shell: pwsh

      - name: Setup CMake & Rust toolchain
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 3.26.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release
        run: cargo build --release

      - name: Run Zed (with backtraces enabled)
        run: target\release\zed.exe
        env:
          RUST_BACKTRACE: 1
